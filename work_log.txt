Jonathan Shalvi

Feb 16, 2012
===
Jumped right in and set up the project.  Created an HTTP package to handle
request parsing, and response construction.  Created the Request object, enum
types for Request method and HTTP version.  I started some basic parsing, and
am considering moving the job of parsing up into a static factory so the
Request object can be immutable.

02/16/2012 - Design: 	0:00
02/16/2012 - Coding: 	1:00
02/16/2012 - Bugs:		0:00


Feb 20, 2012
===
Created a static RequestParser class which will parse an incoming request and
return an immutable Request object.  Completed unit tests and implementation
for parsing elements of the request line.  Next step is to parse the request
line as a whole and to get started on the Response object.

02/19/2012 - Design:	0:00
02/19/2012 - Coding:	2:00
02/19/2012 - Bugs:		0:00

Weekly summary
================================================================================
Design:	0:00
Coding: 3:00
Bugs:	0:00



Feb 22, 2012
===
Read up on basic networking in Java and wrote a very simple HTTP server as an
exercise.  Spent an hour debugging an issue in which the client does not send a
final CRLF, preventing the server from breaking its readLine loop.  After some
research, I realized I misunderstood the spec, and the socket is expected to
stay open until the last CRLF is receieved, unless content-length is specified.

02/19/2012 - Design:	0:30
02/19/2012 - Coding:	0:30
02/19/2012 - Bugs:		1:00

Feb 26, 2012
===
Completed the request parser for the request line, which should be enough to
bring up a basic server this weekend.

02/19/2012 - Design:	0:00
02/19/2012 - Coding:	3:00
02/19/2012 - Bugs:		0:00


Feb 27, 2012
===
Built out the response and static file request handler, and associated tests.
Using these basic components I was able to succesfully start up a basic server
which serves up static text content.

02/19/2012 - Design:	0:30
02/19/2012 - Coding:	4:00
02/19/2012 - Bugs:		0:30

Weekly summary
================================================================================
Design:		1:00
Coding:		7:30
Bugs:		1:30


Mar 2, 2012
===
Planned out and prioritized my work for the weekend.  Designed and started
coding a command-line parser.  It's probably too much for my simple needs, but
a good exercise in and of itself.

03/02/2012 - Design:	1:00
03/02/2012 - Coding:	0:30
03/02/2012 - Bugs:		0:00


Mar 3, 2012
===
Continued working on the command-line parser.  Spent a fair amount of time on a
bug that could not be tested with a unit test.

03/03/2012 - Design:	0:30
03/03/2012 - Coding:	2:00
03/03/2012 - Bugs:		0:30


Mar 4, 2012
===
Built out the bulk of header parsing, which took much longer than anticipated.
Unit tests are proving to be very time-consuming.  However, I spent no time on
bugs worth measuring.

03/04/2012 - Design:	0:30
03/04/2012 - Coding:	7:30
03/04/2012 - Bugs:		0:00

Weekly summary
================================================================================
Design:		 2:00
Coding:		10:00
Bugs:		 0:30


Cumulative summary
================================================================================
Design:		 3:00
Coding:		20:30
Bugs:		 2:00


Mar 6, 2012
================================================================================
Began work on postdata support.  Added necessary data structures, unit tests,
and parsing method to grab a url-encoded postdata from the request body.

03/08/2012 - Design:	0:00
03/08/2012 - Coding:	2:00
03/08/2012 - Bugs:		0:00

Mar 7, 2012
================================================================================
Spent a fair amount of time reading about HTTP message formats to ensure my
design is on track.  Added a getter for request content length and completed
post parsing.  I accidentally starting using postdata rather than headers to
determine the next parsing state.  Honestly I'm getting turned around
completely in my own project!  After correcting this mistake, all my unit tests
passed!

03/08/2012 - Design:	1:00
03/08/2012 - Coding:	1:00
03/08/2012 - Bugs:		0:30

Mar 8
three hours of design

Mar 10
1pm - 1:30pm
1 hr coding
30 min bug (incorrect readline for postdata)

